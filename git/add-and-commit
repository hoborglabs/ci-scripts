#!/bin/bash

_DIR_="$(dirname "$0")"

. "$_DIR_/../lib/log"
. "$_DIR_/functions"

usage() {
	msg=$1
	if [[ $msg ]]; then
		logMsg "$msg"
	fi

	echo "add-and-commit -m 'my commit message' -d ./dist:./CHANGELOG

-m 'msg'     Commit message
-d 'dir'     List of files or folders to add, separated with ':'
	"
	exit 1;
}

main() {
	# get options
	branchName='master'
	while getopts m:d:b:h opt; do
		case "$opt" in
			m)
				commitMsg="$OPTARG"
				;;

			d)
				commitDirs="$OPTARG"
				;;

			b)
				branchName="$OPTARG"
				;;

			h)
				usage
				;;

			"")
				usage "Missing arguments";
				;;

			*)
				usage "Unrecognied option '$opt'";
				;;
		esac
	done;

	if [[ -z $commitDirs || -z $commitMsg ]]; then
		usage
	fi

	ensureOnBranch "$branchName"
	gitAdd "$commitDirs"
	gitCommitAndPush "$commitMsg"

	exit 0
}

#
gitAdd() {
	dirs=$1

	logMsg "Looking for changes in: $dirs"

	git add $dirs

	newFiles=`git diff --name-only --cached`
	if [[ -z $newFiles ]]; then
		logError "No changes found." 0
	fi

	logMsg "Files to be commited:"
	for file in $newFiles; do
		logMsg " * $file"
	done
}

gitCommitAndPush() {
	cm=$1

	# commit and push to current branch
	git commit -m "$cm" -q

	remote=`git remote`
	if [[ -z $remote ]]; then
		logMsg "Nothing to push, there is no remote repository"
	else
		git push $remote HEAD -q
	fi



	lastCommit=`git log -n 1 --pretty="%h, %s"`
	logMsg "Commited and pushed - ${lastCommit}"
}

main "$@"
